---
kind: pipeline
name: lint
type: docker
steps:
- name: mod tidy
  image: "pr0ger/baseimage:build.go-latest"
  commands:
  - go mod tidy -v
  - git diff --exit-code
- name: lint
  image: "golangci/golangci-lint:v1.46-alpine"
  commands:
  - go install github.com/golang/mock/mockgen@latest
  - go generate -x
  - golangci-lint run -v

---
kind: pipeline
name: tests 1.16
type: docker
steps:
- name: build
  image: "pr0ger/baseimage:build.go-1.16"
  commands:
  - go mod download
  - go generate -x
  - go build -v
  volumes:
  - name: deps
    path: /go
- name: test
  image: "pr0ger/baseimage:build.go-1.16"
  commands:
  - go test -v ./...
  volumes:
  - name: deps
    path: /go

volumes:
- name: deps
  temp: { }

---
kind: pipeline
name: tests 1.17
type: docker
steps:
- name: build
  image: "pr0ger/baseimage:build.go-1.17"
  commands:
  - go mod download
  - go generate -x
  - go build -v
  volumes:
  - name: deps
    path: /go
- name: test
  image: "pr0ger/baseimage:build.go-1.17"
  commands:
  - go test -v ./...
  volumes:
  - name: deps
    path: /go

volumes:
- name: deps
  temp: { }

---
kind: pipeline
name: update docs
type: docker
clone:
  disable: true
trigger:
  event:
  - tag
depends_on:
- "tests 1.16"
- "tests 1.17"
steps:
- name: pkg.go.dev
  image: "alpine:latest"
  commands:
  - apk add curl jq
  - curl -s https://proxy.golang.org/go.pr0ger.dev/logger/@v/${DRONE_TAG}.info | jq
- name: godocs.io
  image: "alpine:latest"
  commands:
  - apk add curl
  - echo 'nameserver 1.1.1.1' > /etc/resolv.conf
  - curl -X "POST" "https://godocs.io/-/refresh?import_path=go.pr0ger.dev%2Flogger&platform=linux%2Famd64"
